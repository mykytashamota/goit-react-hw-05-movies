{"version":3,"file":"static/js/520.7b133897.chunk.js","mappings":"mNAEaA,EAAOC,EAAAA,GAAAA,GAAH,iGAOJC,EAAOD,EAAAA,GAAAA,GAAH,sHASJE,EAAOF,EAAAA,GAAAA,EAAH,6C,iBCgBjB,EA9BkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACR,EAAD,WACE,UAAC,KAAD,CACES,GACEN,EAASO,SAASC,SAAS,WAA3B,UAA2CL,GAA3C,kBAA6DA,GAE/DM,MAAO,CAAEC,KAAMV,GAJjB,WAME,gBACEW,IACEN,EAAW,yCAC2BA,GAClCO,EAENC,IAAI,SACJC,MAAO,IACPC,OAAQ,OAEV,SAACjB,EAAD,UAAOM,QAjBAD,EADD,KAwBjB,C,sKC9BYa,EAAOpB,EAAAA,GAAAA,KAAH,0CAGJqB,EAAcrB,EAAAA,GAAAA,MAAH,2KAUXsB,EAAetB,EAAAA,GAAAA,OAAH,wU,SCUzB,EAtBmB,SAAC,GAAwB,IAAtBuB,EAAqB,EAArBA,eACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,UAACN,EAAD,CAAMO,SANS,SAAAC,GACfA,EAAEC,iBACFN,EAAeK,GACfA,EAAEE,cAAcC,OACjB,EAEC,WACE,SAACV,EAAD,CACEW,YAAY,kBACZC,KAAK,OACLR,MAAOA,EACPS,KAAK,YACLC,SAAU,SAAAP,GAAC,OAAIF,EAASE,EAAEQ,OAAOX,MAAtB,EACXY,UAAQ,KAEV,SAACf,EAAD,CAAcW,KAAK,SAAnB,sBAGL,E,QCwBD,EAxCe,WAAO,IAAD,EACnB,GAA4BT,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAemC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdF,EAAJ,CAGA,IAAMG,EAAa,IAAIC,gBACjBC,EAAQ,mCAAG,gHAEaC,EAAAA,EAAAA,GAAU,uBAAD,OACVN,GACvBG,GAJW,gBAELI,EAFK,EAELA,QAIRX,EAAUW,GANG,gDAQM,iBAAf,KAAMC,MACRC,EAAAA,GAAAA,MAAY,kCATD,yDAAH,qDAcd,OADAJ,IACO,kBAAMF,EAAWO,OAAjB,CAhBN,CAiBF,GAAE,CAACV,IAOJ,OACE,4BACE,SAAC,EAAD,CAAYnB,eAPO,SAAA8B,GACrB,IAAMC,EAAOD,EAAIvB,cACjBW,EAAgB,CAAEc,MAAOD,EAAKE,SAASd,UAAUjB,OAClD,IAKItB,EAAOsD,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWvD,OAAQA,MAG9C,C,8FC3CDwD,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMX,EAAS,mCAAG,WAAOY,EAAMf,GAAb,uFACAc,EAAAA,EAAAA,IAAUC,EAAM,CACrCC,OAAQhB,EAAWgB,SAFE,cACjBC,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,uD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n  &:hover {\n    color: #3d7bfb;\n  }\n`;\n\nexport const Name = styled.p`\n  max-width: 300px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Name } from './MovieList.styled';\nimport posterDefault from 'images/posterDefault.jpg';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <Link\n            to={\n              location.pathname.includes('/movies') ? `${id}` : `/movies/${id}`\n            }\n            state={{ from: location }}\n          >\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : posterDefault\n              }\n              alt=\"poster\"\n              width={300}\n              height={450}\n            />\n            <Name>{title}</Name>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n`;\nexport const SearchInput = styled.input`\n  max-width: 190px;\n  padding: 7px;\n  border: none;\n  border-radius: 4px;\n  border: 1px solid #056bfa27;\n  outline: none;\n  color: dimgray;\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 10px 8px 10px;\n  gap: 8px;\n  margin-left: 10px;\n  height: 40px;\n  width: 100px;\n  border: none;\n  border-radius: 4px;\n  background: #056bfa27;\n  cursor: pointer;\n\n  &:hover {\n    background: #056bfa49;\n  }\n`;\n","import { useState } from 'react';\nimport { SearchButton, SearchInput, Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSearchSubmit }) => {\n  const [value, setValue] = useState('');\n  const onSubmit = e => {\n    e.preventDefault();\n    onSearchSubmit(e);\n    e.currentTarget.reset();\n  };\n  return (\n    <Form onSubmit={onSubmit}>\n      <SearchInput\n        placeholder=\"Type movie name\"\n        type=\"text\"\n        value={value}\n        name=\"movieName\"\n        onChange={e => setValue(e.target.value)}\n        required\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovies } from 'services/movieApi';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    const controller = new AbortController();\n    const getMovie = async () => {\n      try {\n        const { results } = await getMovies(\n          `/search/movie?query=${movieName}`,\n          controller\n        );\n        setMovies(results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.error('Ooops... Something went wrong.');\n        }\n      }\n    };\n    getMovie();\n    return () => controller.abort();\n  }, [movieName]);\n\n  const onSearchSubmit = evt => {\n    const form = evt.currentTarget;\n    setSearchParams({ query: form.elements.movieName.value });\n  };\n\n  return (\n    <div>\n      <SearchForm onSearchSubmit={onSearchSubmit} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNWE2YjI4NDE4NjQ2MzJjM2IxNWU2ZDRlODMyMDY0ZCIsInN1YiI6IjY1MjdhMWUxY2I2ZGI1MDBhZGJlYjZlYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5Y4zTyHAohqZ-iIa2fc9-B-O64-kHEDM1rctk5tnotg';\n\nexport const getMovies = async (path, controller) => {\n  const response = await axios.get(path, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n"],"names":["List","styled","Item","Name","movies","location","useLocation","map","id","title","poster_path","to","pathname","includes","state","from","src","posterDefault","alt","width","height","Form","SearchInput","SearchButton","onSearchSubmit","useState","value","setValue","onSubmit","e","preventDefault","currentTarget","reset","placeholder","type","name","onChange","target","required","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","controller","AbortController","getMovie","getMovies","results","code","toast","abort","evt","form","query","elements","length","MovieList","axios","path","signal","response","data"],"sourceRoot":""}