{"version":3,"file":"static/js/147.a377c5d1.chunk.js","mappings":"iQAEaA,E,OAAcC,GAAAA,GAAH,4E,iBCsDxB,EAjDa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAa,IAAIC,gBACjBC,EAAO,mCAAG,gHAEWC,EAAAA,EAAAA,GAAU,UAAD,OACpBN,EADoB,YAE9BG,GAJU,gBAEJL,EAFI,EAEJA,KAIRC,EAAQD,GANI,gDAQO,iBAAf,KAAMS,MACRC,EAAAA,GAAAA,MAAY,kCATF,yDAAH,qDAcb,OADAH,IACO,kBAAMF,EAAWM,OAAjB,CAhBN,CAiBF,GAAE,CAACT,IAEGF,EAAKY,OAAS,GACnB,SAACf,EAAD,UACGG,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,aAAb,OACR,2BACE,gBACEC,IACED,EAAY,yCAC0BA,G,8zOAGxCE,IAAI,QACJC,MAAO,IACPC,OAAQ,OAEV,uBAAIN,MAXGC,EADD,OAiBZ,uEAEH,C,8FCpDDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMb,EAAS,mCAAG,WAAOc,EAAMjB,GAAb,uFACAgB,EAAAA,EAAAA,IAAUC,EAAM,CACrCC,OAAQlB,EAAWkB,SAFE,cACjBC,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,uD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovies } from 'services/movieApi';\nimport { CastGallery } from './Cast.styled';\nimport userDefault from 'images/userDefault.jpg';\nimport toast from 'react-hot-toast';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const controller = new AbortController();\n    const getCast = async () => {\n      try {\n        const { cast } = await getMovies(\n          `/movie/${movieId}/credits`,\n          controller\n        );\n        setCast(cast);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.error('Ooops... Something went wrong.');\n        }\n      }\n    };\n    getCast();\n    return () => controller.abort();\n  }, [movieId]);\n\n  return cast.length > 0 ? (\n    <CastGallery>\n      {cast.map(({ name, id, profile_path }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                : userDefault\n            }\n            alt=\"actor\"\n            width={200}\n            height={300}\n          />\n          <p>{name}</p>\n        </li>\n      ))}\n    </CastGallery>\n  ) : (\n    <p>There is no cast information for this movie.</p>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNWE2YjI4NDE4NjQ2MzJjM2IxNWU2ZDRlODMyMDY0ZCIsInN1YiI6IjY1MjdhMWUxY2I2ZGI1MDBhZGJlYjZlYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5Y4zTyHAohqZ-iIa2fc9-B-O64-kHEDM1rctk5tnotg';\n\nexport const getMovies = async (path, controller) => {\n  const response = await axios.get(path, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n"],"names":["CastGallery","styled","useState","cast","setCast","movieId","useParams","useEffect","controller","AbortController","getCast","getMovies","code","toast","abort","length","map","name","id","profile_path","src","alt","width","height","axios","path","signal","response","data"],"sourceRoot":""}