{"version":3,"file":"static/js/387.df4db1d6.chunk.js","mappings":"iQAEaA,E,OAAaC,GAAAA,EAAH,6C,iBCwCvB,EArCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAU,mCAAG,gHAEWC,EAAAA,EAAAA,GAAU,UAAD,OACvBN,EADuB,YAEjCG,GAJa,gBAEPI,EAFO,EAEPA,QAIRR,EAAWQ,GANI,gDAQI,iBAAf,KAAMC,MACRC,EAAAA,GAAAA,MAAY,kCATC,yDAAH,qDAchB,OADAJ,IACO,kBAAMF,EAAWO,OAAjB,CACR,GAAE,CAACV,IAEGF,EAAQa,OAAS,GACtB,wBACGb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,UAACpB,EAAD,sBAAqBkB,MACrB,uBAAIC,MAFGC,EADE,OAQf,mEAEH,C,8FCtCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMV,EAAS,mCAAG,WAAOW,EAAMd,GAAb,uFACAa,EAAAA,EAAAA,IAAUC,EAAM,CACrCC,OAAQf,EAAWe,SAFE,cACjBC,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,uD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthorName = styled.p`\n  font-weight: 700;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovies } from 'services/movieApi';\nimport { AuthorName } from './Reviews.styled';\nimport toast from 'react-hot-toast';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getReviews = async () => {\n      try {\n        const { results } = await getMovies(\n          `/movie/${movieId}/reviews`,\n          controller\n        );\n        setReviews(results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.error('Ooops... Something went wrong.');\n        }\n      }\n    };\n    getReviews();\n    return () => controller.abort();\n  }, [movieId]);\n\n  return reviews.length > 0 ? (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <li key={id}>\n          <AuthorName>AUTHOR: {author}</AuthorName>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>There are no reviews for this movie yet.</p>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNWE2YjI4NDE4NjQ2MzJjM2IxNWU2ZDRlODMyMDY0ZCIsInN1YiI6IjY1MjdhMWUxY2I2ZGI1MDBhZGJlYjZlYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5Y4zTyHAohqZ-iIa2fc9-B-O64-kHEDM1rctk5tnotg';\n\nexport const getMovies = async (path, controller) => {\n  const response = await axios.get(path, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n"],"names":["AuthorName","styled","useState","reviews","setReviews","movieId","useParams","useEffect","controller","AbortController","getReviews","getMovies","results","code","toast","abort","length","map","author","content","id","axios","path","signal","response","data"],"sourceRoot":""}